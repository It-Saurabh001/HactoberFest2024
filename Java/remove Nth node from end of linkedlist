/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode temp1 = head;
        ListNode temp2 = head;
        ListNode temp3 = head;
        int count = 1;
        while(count != n){
            temp2 = temp2.next;
            count++;
        }
        if(temp2.next == null){
            temp1 = temp1.next;
            return temp1;
        }
        while(temp2.next != null){
            temp1 = temp3;
            temp3 = temp3.next;
            temp2 = temp2.next;
        }
        temp3 = temp3.next;
        temp1.next = temp3;
        return head;
    }
}
